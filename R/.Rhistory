?grid.points
plotCIEchrom(opts = "sRGB")#
D65 <- getWhiteValues("D65")#
grid.points(D65[1], D65[2], size = unit(0.5m, "char"))#
grid.text("D65", D65[1], D65[2], hjust = 1.2, default.units = "native")
plotCIEchrom(opts = "sRGB")#
D65 <- getWhiteValues("D65")#
grid.points(D65[1], D65[2], size = unit(0.5, "char"))#
grid.text("D65", D65[1], D65[2], hjust = 1.2, default.units = "native")
?gpar
plotCIEchrom(opts = "sRGB")#
D65 <- getWhiteValues("D65")#
grid.points(D65[1], D65[2], size = unit(0.5, "char"))#
grid.text("D65", D65[1], D65[2], hjust = 1.2, default.units = "native",#
	gp = gpar(cex = 0.5))
grid.text("D65", D65[1], D65[2], hjust = 1.2, default.units = "native",#
	gp = gpar(cex = 0.75))
grid.points(chk[,1], chk[,2])#
grid.text(label = sc$id, chk[,1], chk[,2], default.units = "native",#
#
	gp = gpar(cex = 0.75))
hex <- c("#FF0000", "#0000FF", "#00FF00", "#FFFF00", "#00FFFF", "#FF00FF","#FFF5EE", "#FFA500", "#7F7F7F", "#BF3EFF", "#8B2323", "#7FFFD4")#
id <- c("red", "blue", "green", "yellow", "cyan", "magenta", "seashell", "orange", "gray50", "darkorchid1", "brown4", "aquamarine")#
sc <- data.frame(cols = hex, id = id)
plotCIEchrom(opts = "sRGB")#
D65 <- getWhiteValues("D65")#
grid.points(D65[1], D65[2], size = unit(0.5, "char"))#
grid.text("D65", D65[1], D65[2], hjust = 1.2, default.units = "native",#
	gp = gpar(cex = 0.75))
grid.points(chk[,1], chk[,2], size = unit(0.5, "char"))#
grid.text(label = sc$id, chk[,1], chk[,2], default.units = "native",#
#
	gp = gpar(cex = 0.75))
plotCIEchrom(opts = "sRGB")#
D65 <- getWhiteValues("D65")#
grid.points(D65[1], D65[2], size = unit(0.5, "char"))#
grid.text("D65", D65[1], D65[2], hjust = 1.2, default.units = "native",#
	gp = gpar(cex = 0.75))#
#
grid.points(chk[,1], chk[,2], size = unit(0.5, "char"))#
grid.text(label = sc$id, chk[,1], chk[,2], default.units = "native",#
	hjust = c(1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0),#
	gp = gpar(cex = 0.75))
plotCIEchrom(opts = "sRGB")#
D65 <- getWhiteValues("D65")#
grid.points(D65[1], D65[2], size = unit(0.5, "char"))#
grid.text("D65", D65[1], D65[2], hjust = 1.2, default.units = "native",#
	gp = gpar(cex = 0.75))#
#
grid.points(chk[,1], chk[,2], size = unit(0.5, "char"))#
grid.text(label = sc$id, chk[,1], chk[,2], default.units = "native",#
	hjust = c(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0),#
	gp = gpar(cex = 0.75))
plotCIEchrom(opts = "sRGB")#
D65 <- getWhiteValues("D65")#
grid.points(D65[1], D65[2], size = unit(0.5, "char"))#
grid.text("D65", D65[1], D65[2], hjust = 1.2, default.units = "native",#
	gp = gpar(cex = 0.75))#
#
grid.points(chk[,1], chk[,2], size = unit(0.5, "char"))#
grid.text(label = sc$id, chk[,1], chk[,2], default.units = "native",#
	hjust = c(0, 1.2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0),#
	gp = gpar(cex = 0.75))
?grid.text
hex <- c("#FF0000", "#FF00FF", "#0000FF", "#00FFFF", "#00FF00", "#FFFF00", "#FFF5EE", "#FFA500", "#7F7F7F", "#BF3EFF", "#8B2323", "#7FFFD4")#
id <- c("red", "magenta", "blue", "cyan", "green", "yellow", "seashell", "gray50", "darkorchid1", "brown4", "aquamarine")#
id2 <- c("  red", "  magenta", "blue  ", "cyan  ", "  green", "  yellow", "seashell", "gray50", "darkorchid1", "brown4", "aquamarine")#
sc <- data.frame(cols = hex, id = id, id2 = id2)
hex <- c("#FF0000", "#FF00FF", "#0000FF", "#00FFFF", "#00FF00", "#FFFF00")#
id <- c("red", "magenta", "blue", "cyan", "green", "yellow")#
id2 <- c("  red", "  magenta", "blue  ", "cyan  ", "  green", "  yellow")#
sc <- data.frame(cols = hex, id = id, id2 = id2)
sc
plotCIEchrom(opts = "sRGB")#
D65 <- getWhiteValues("D65")#
grid.points(D65[1], D65[2], size = unit(0.5, "char"))#
grid.text("D65", D65[1], D65[2], hjust = 1.2, default.units = "native",#
	gp = gpar(cex = 0.75))#
#
grid.points(chk[,1], chk[,2], size = unit(0.5, "char"))#
grid.text(label = sc$id2, chk[,1], chk[,2], default.units = "native",#
	hjust = c(0, 1.2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0),#
	gp = gpar(cex = 0.75))
plotCIEchrom(opts = "sRGB")#
D65 <- getWhiteValues("D65")#
grid.points(D65[1], D65[2], size = unit(0.5, "char"))#
grid.text("D65", D65[1], D65[2], hjust = 1.2, default.units = "native",#
	gp = gpar(cex = 0.75))#
#
grid.points(chk[,1], chk[,2], size = unit(0.5, "char"))#
grid.text(label = sc$id2, chk[,1], chk[,2], default.units = "native",#
	hjust = c(0, 0, 0, 1, 0, 0),#
	gp = gpar(cex = 0.75))
hex <- c("#FF0000", "#FF00FF", "#0000FF", "#00FFFF", "#00FF00", "#FFFF00")#
id <- c("red", "magenta", "blue", "cyan", "green", "yellow")#
id2 <- c("  red", "  magenta", "  blue", "cyan  ", "  green", "  yellow")#
sc <- data.frame(cols = hex, id = id, id2 = id2)#
#
plotCIEchrom(opts = "sRGB")#
D65 <- getWhiteValues("D65")#
grid.points(D65[1], D65[2], size = unit(0.5, "char"))#
grid.text("D65", D65[1], D65[2], hjust = 1.2, default.units = "native",#
	gp = gpar(cex = 0.75))#
#
grid.points(chk[,1], chk[,2], size = unit(0.5, "char"))#
grid.text(label = sc$id2, chk[,1], chk[,2], default.units = "native",#
	hjust = c(0, 0, 0, 1, 0, 0),#
	gp = gpar(cex = 0.75))
plotCIEchrom(opts = "sRGB")#
D65 <- getWhiteValues("D65")#
grid.points(D65[1], D65[2], size = unit(0.5, "char"))#
grid.text("  D65", D65[1], D65[2], hjust = 0, default.units = "native",#
	gp = gpar(cex = 0.75))#
#
grid.points(chk[,1], chk[,2], size = unit(0.5, "char"))#
grid.text(label = sc$id2, chk[,1], chk[,2], default.units = "native",#
	hjust = c(0, 0, 0, 1, 0, 0),#
	gp = gpar(cex = 0.75))
calcColorPurity <- function(sampCol = NULL, gamut = "sRGB", plotPts = TRUE) {#
	if (is.null(sampCol)) stop("No sample colors provided")#
	ns <- nrow(sampCol) #
	if ("cols" %in% names(sampCol)) sampCol$hex <- sampCol$cols#
	rgb <- t(col2rgb(sampCol$hex)/255)#
	XYZ <- convertColor(rgb, from = "sRGB", to = "XYZ")#
	x <- XYZ[,1]/rowSums(XYZ)#
	y <- XYZ[,2]/rowSums(XYZ)#
	cie <- cbind(x, y)#
	print(cie)#
	if (gamut == "sl") { #
		data(CIExyz)#
		pg <- CIExyz[,c(2,3)] #
		pg <- rbind(pg, pg[1,]) #
		}#
#
	if (gamut == "sRGB") { #
		pg <- getGamutValues("sRGB")#
		pg <- rbind(pg, pg[1,]) #
		}#
	cie2 <- cie#
	for (i in 1:ns) {#
		cie2[i,] <- extendFromD65(cie[i,])#
		}#
#
	D65 <- getWhiteValues("D65")#
#
	if (plotPts) {#
		plotCIEchrom(opts = "sRGB")#
		grid.points(D65[1], D65[2], size = unit(0.5, "char"))#
		grid.text("  D65", D65[1], D65[2], hjust = 0, default.units = "native",#
			gp = gpar(cex = 0.75))#
		grid.points(cie[,1], cie[,2], size = unit(0.5, "char"))#
		grid.text(label = sampCol$id, cie[,1], cie[,2], default.units = "native",#
			hjust = 0, gp = gpar(cex = 0.75))#
		}#
#
	hits <- findPolygonIntersection(XY = cie2, xy = pg) #
	print(hits)#
	if (length(hits) != ns) stop("Wrong number of hits")#
	cp <- sampCol #
	cp$purity <- rep(0.0, ns)#
#
	for (i in 1:ns) {#
		dc <- dAB(D65, cie[i,]) #
		ndx1 <- i#
		ndx2 <- (i %% ns) + 1 #
		cat("ndx1, 2:", ndx1, ndx2, "\n")#
		where <- lineIntersection(D65[1], D65[2], cie2[i,1], cie2[i,2],#
			pg[hits[ndx1], 1], pg[hits[ndx1], 2], pg[hits[ndx2], 1], pg[hits[ndx2], 2])#
		dg <- dAB(D65, where) #
		cp$purity[i] <- dc*100/dg#
		}#
	hits#
	}
tst
hex <- c("#7F7F7F", "#CD3333", "#98F5FF", "#7FFF00", "#1E90FF", "#FFD700")#
id <- c("grey50", "brown3", "cadetblue1", "chartreuse", "dodgerblue1", "gold")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7F7F7F", "#CD3333", "#98F5FF", "#7FFF00", "#1E90FF", "#FFF68F")#
id <- c("grey50", "brown3", "cadetblue1", "chartreuse", "dodgerblue1", "khaki1")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7F7F7F", "#CD3333", "#98F5FF", "#C1FFC1", "#1E90FF", "#FFF68F")#
id <- c("grey50", "brown3", "cadetblue1", "darkseagreen1", "dodgerblue1", "khaki1")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7F7F7F", "#CD3333", "#6495ED", "#C1FFC1", "#1E90FF", "#FFF68F")#
id <- c("grey50", "brown3", "cornflowerblue", "darkseagreen1", "dodgerblue1", "khaki1")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7F7F7F", "#CD3333", "#6495ED", "#C1FFC1", "#FF69B4", "#FFF68F")#
id <- c("grey50", "brown3", "cornflowerblue", "darkseagreen1", "hotpink", "khaki1")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7FFFD4", "#CD3333", "#6495ED", "#C1FFC1", "#FF69B4", "#FFF68F")#
id <- c("aquamarine", "brown3", "cornflowerblue", "darkseagreen1", "hotpink", "khaki1")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7FFFD4", "#CD3333", "#6495ED", "#E9967A", "#FF69B4", "#FFF68F")#
id <- c("aquamarine", "brown3", "cornflowerblue", "darksalmon", "hotpink", "khaki1")#
sc <- data.frame(cols = hex, id = id)
calcColorPurity <- function(sampCol = NULL, gamut = "sRGB", plotPts = TRUE, ...) {#
	if (is.null(sampCol)) stop("No sample colors provided")#
	ns <- nrow(sampCol) #
	if ("cols" %in% names(sampCol)) sampCol$hex <- sampCol$cols#
	rgb <- t(col2rgb(sampCol$hex)/255)#
	XYZ <- convertColor(rgb, from = "sRGB", to = "XYZ")#
	x <- XYZ[,1]/rowSums(XYZ)#
	y <- XYZ[,2]/rowSums(XYZ)#
	cie <- cbind(x, y)#
	print(cie)#
	if (gamut == "sl") { #
		data(CIExyz)#
		pg <- CIExyz[,c(2,3)] #
		pg <- rbind(pg, pg[1,]) #
		}#
#
	if (gamut == "sRGB") { #
		pg <- getGamutValues("sRGB")#
		pg <- rbind(pg, pg[1,]) #
		}#
	cie2 <- cie#
	for (i in 1:ns) {#
		cie2[i,] <- extendFromD65(cie[i,])#
		}#
#
	D65 <- getWhiteValues("D65")#
#
	if (plotPts) { #
		plotCIEchrom(opts = "sRGB")#
		grid.points(D65[1], D65[2], size = unit(0.5, "char"))#
		grid.text("  D65", D65[1], D65[2], hjust = 0, default.units = "native",#
			gp = gpar(cex = 0.75))#
		grid.points(cie[,1], cie[,2], size = unit(0.5, "char"))#
		grid.text(label = sampCol$id, cie[,1], cie[,2], default.units = "native",#
			hjust = 0, gp = gpar(cex = 0.75))#
		}#
#
	hits <- findPolygonIntersection(XY = cie2, xy = pg) #
	print(hits)#
	if (length(hits) != ns) stop("Wrong number of hits")#
	cp <- sampCol #
	cp$purity <- rep(0.0, ns)#
#
	for (i in 1:ns) {#
		dc <- dAB(D65, cie[i,]) #
		ndx1 <- i#
		ndx2 <- (i %% ns) + 1 #
#
		where <- lineIntersection(D65[1], D65[2], cie2[i,1], cie2[i,2],#
			pg[hits[ndx1], 1], pg[hits[ndx1], 2], pg[hits[ndx2], 1], pg[hits[ndx2], 2])#
		dg <- dAB(D65, where) #
		cp$purity[i] <- dc*100/dg#
		}#
	cp#
#
	}
tst <- calcColorPurity(sampCol = sc, opts = "sRGB")
calcColorPurity <- function(sampCol = NULL, gamut = "sRGB", plotPts = TRUE, ...) {#
	if (is.null(sampCol)) stop("No sample colors provided")#
	ns <- nrow(sampCol) #
	if ("cols" %in% names(sampCol)) sampCol$hex <- sampCol$cols#
	rgb <- t(col2rgb(sampCol$hex)/255)#
	XYZ <- convertColor(rgb, from = "sRGB", to = "XYZ")#
	x <- XYZ[,1]/rowSums(XYZ)#
	y <- XYZ[,2]/rowSums(XYZ)#
	cie <- cbind(x, y)#
	print(cie)#
	if (gamut == "sl") { #
		data(CIExyz)#
		pg <- CIExyz[,c(2,3)] #
		pg <- rbind(pg, pg[1,]) #
		}#
#
	if (gamut == "sRGB") { #
		pg <- getGamutValues("sRGB")#
		pg <- rbind(pg, pg[1,]) #
		}#
	cie2 <- cie#
	for (i in 1:ns) {#
		cie2[i,] <- extendFromD65(cie[i,])#
		}#
#
	D65 <- getWhiteValues("D65")#
#
	if (plotPts) { #
		plotCIEchrom(opts = "sRGB", ...)#
		grid.points(D65[1], D65[2], size = unit(0.5, "char"))#
		grid.text("  D65", D65[1], D65[2], hjust = 0, default.units = "native",#
			gp = gpar(cex = 0.75))#
		grid.points(cie[,1], cie[,2], size = unit(0.5, "char"))#
		grid.text(label = sampCol$id, cie[,1], cie[,2], default.units = "native",#
			hjust = 0, gp = gpar(cex = 0.75))#
		}#
#
	hits <- findPolygonIntersection(XY = cie2, xy = pg) #
	print(hits)#
	if (length(hits) != ns) stop("Wrong number of hits")#
	cp <- sampCol #
	cp$purity <- rep(0.0, ns)#
#
	for (i in 1:ns) {#
		dc <- dAB(D65, cie[i,]) #
		ndx1 <- i#
		ndx2 <- (i %% ns) + 1 #
#
		where <- lineIntersection(D65[1], D65[2], cie2[i,1], cie2[i,2],#
			pg[hits[ndx1], 1], pg[hits[ndx1], 2], pg[hits[ndx2], 1], pg[hits[ndx2], 2])#
		dg <- dAB(D65, where) #
		cp$purity[i] <- dc*100/dg#
		}#
	cp#
#
	}
tst <- calcColorPurity(sampCol = sc, gradient = "sRGB")
hex <- c("#7FFFD4", "#CD3333", "#6495ED", "#E9967A", "#FF69B4", "#FFF68F", "#9400D3")#
id <- c("aquamarine", "brown3", "cornflowerblue", "darksalmon", "hotpink", "khaki1", "darkviolet")#
sc <- data.frame(cols = hex, id = id)
?plotCIEchrom
tst <- calcColorPurity(sampCol = sc, gradient = getGamutValues("sRGB"))
hex <- c("#7FFFD4", "#CD3333", "#6495ED", "#E9967A", "#FF69B4", "#FFF68F", "#BF3EFF")#
id <- c("aquamarine", "brown3", "cornflowerblue", "darksalmon", "hotpink", "khaki1", "darkorchid1")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7FFFD4", "#CD3333", "#6495ED", "#E9967A", "#FF69B4", "#ADFF2F", "#BF3EFF")#
id <- c("aquamarine", "brown3", "cornflowerblue", "darksalmon", "hotpink", "greenyellow", "darkorchid1")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7FFFD4", "#CD9B9B", "#6495ED", "#E9967A", "#FF69B4", "#ADFF2F", "#BF3EFF")#
id <- c("aquamarine", "rosybrown3", "cornflowerblue", "darksalmon", "hotpink", "greenyellow", "darkorchid1")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7FFFD4", "#8B4513", "#6495ED", "#E9967A", "#FF69B4", "#ADFF2F", "#BF3EFF")#
id <- c("aquamarine", "saddlebrown", "cornflowerblue", "darksalmon", "hotpink", "greenyellow", "darkorchid1")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7FFFD4", "#88B4513", "#6495ED", "#E9967A", "#FF69B4", "#ADFF2F", "#BF3EFF")#
id <- c("aquamarine", "palevioletred", "cornflowerblue", "darksalmon", "hotpink", "greenyellow", "darkorchid1")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7FFFD4", "#CD6889", "#6495ED", "#E9967A", "#FF69B4", "#ADFF2F", "#BF3EFF")#
id <- c("aquamarine", "palevioletred3", "cornflowerblue", "darksalmon", "hotpink", "greenyellow", "darkorchid1")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7FFFD4", "#CD4F39", "#6495ED", "#E9967A", "#FF69B4", "#ADFF2F", "#BF3EFF", "#C71585")#
id <- c("aquamarine", "tomato3", "cornflowerblue", "darksalmon", "hotpink", "greenyellow", "darkorchid1", "mediumvioletred")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7FFFD4", "#CD4F39", "#6495ED", "#E9967A", "#FF69B4", "#ADFF2F", "#BF3EFF", "#EE30A7")#
id <- c("aquamarine", "tomato3", "cornflowerblue", "darksalmon", "hotpink", "greenyellow", "darkorchid1", "maroon2")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7FFFD4", "#CD4F39", "#6495ED", "#E9967A", "#FF69B4", "#ADFF2F", "#BF3EFF", "#FF6A6A")#
id <- c("aquamarine", "tomato3", "cornflowerblue", "darksalmon", "hotpink", "greenyellow", "darkorchid1", "indianred1")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7FFFD4", "#CD4F39", "#6495ED", "#E9967A", "#FF69B4", "#ADFF2F", "#BF3EFF", "#EE1289")#
id <- c("aquamarine", "tomato3", "cornflowerblue", "darksalmon", "hotpink", "greenyellow", "darkorchid1", "deeppink2")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7FFFD4", "#CD4F39", "#6495ED", "#E9967A", "#FF69B4", "#ADFF2F", "#BF3EFF", "#8B008B")#
id <- c("aquamarine", "tomato3", "cornflowerblue", "darksalmon", "hotpink", "greenyellow", "darkorchid1", "darkmagenta")#
sc <- data.frame(cols = hex, id = id)
hex <- c("#7FFFD4", "#CD4F39", "#6495ED", "#E9967A", "#FF69B4", "#ADFF2F", "#BF3EFF")#
id <- c("aquamarine", "tomato3", "cornflowerblue", "darksalmon", "hotpink", "greenyellow", "darkorchid1")#
sc <- data.frame(cols = hex, id = id)
tst <- calcColorPurity(sampCol = sc)
